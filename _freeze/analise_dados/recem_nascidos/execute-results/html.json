{
  "hash": "4e710791870a4aa0915b7611def90725",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Análise de dados: Recém-nascidos prematuros\"\nlang: pt\ntoc: true\ncode-annotations: \"hover\"\n---\n\nConsidere o conjunto de dados referente a um estudo sobre recém-nascidos prematuros de baixo peso. Os dados de cada recém-nascido estão dispostos em uma linha e cada coluna corresponde à informação de uma variável específica.\n\n## Objetivos\n\n-   Explorar os dados sobre recém-nascidos prematuros.\n\nFonte dos dados:\n\n- <https://raw.githubusercontent.com/tiagomartin/est104/refs/heads/master/dados/recem_nascidos.csv>\n\n\n## Preparação\n\n\n### Carregando os pacotes R\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(\n  rio,          # importa arquivos\n  here,         # localiza arquivos\n  skimr,        # gera visualização dos dados\n  tidyverse,    # gestão dos dados + gráficos no ggplot2 \n  gtsummary,    # resumo estatísticos e testes\n  rstatix,      # resumo e testes estatísticos\n  janitor,      # adiciona números absolutos e porcentagens às tabelas\n  scales,       # facilmente converte proporções para porcentagens\n  flextable,    # converte tabelas para o formato de imagens\n  descriptr     # construir tabela de distribuição de frequência em classes\n  ) # <1>\n```\n:::\n\n1. A função p_load(), do pacote pacman, instala os pacotes, caso não estejam instalados, e os carrega no R para utilização.\n\n## Carregando os dados\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos = rio::import(\"https://raw.githubusercontent.com/tiagomartin/est104/refs/heads/master/dados/recem_nascidos.csv\") # <1>\n```\n:::\n1. Uso da função import() do pacote rio para importar um conjunto de dados fornecendo o caminho para o arquivo (incluindo o nome do arquivo e a extensão do arquivo) entre aspas. Após a importação, os dados são armazenados na variável `dados_brutos` \n\n\n## Conhecendo a base de dados\n\n- O que cada linha significa?\n- Quais são as variáveis presentes na base de dados?\n- Qual é o tipo de cada variável? É o esperado?\n<!-- - Tem alguma variável que seria interessante gerar a partir das informações presentes na base de dados? -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  glimpse() # <1>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 48\nColumns: 9\n$ registro          <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1…\n$ pre_natal         <chr> \"N\", \"S\", \"N\", \"N\", \"N\", \"S\", \"N\", \"S\", \"N\", \"N\", \"N…\n$ n_consultas       <int> 0, 5, 0, 0, 0, 2, 0, 4, 0, 0, 0, 4, 0, 5, 1, 5, 4, 3…\n$ sexo              <chr> \"F\", \"M\", \"F\", \"F\", \"M\", \"F\", \"F\", \"M\", \"F\", \"M\", \"F…\n$ peso              <int> 750, 650, 650, 750, 800, 600, 940, 940, 900, 600, 61…\n$ comprimento       <int> 31, 32, 33, 33, 33, 34, 34, 34, 34, 28, 31, 31, 32, …\n$ idade_gestacional <int> 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, …\n$ tempo_permanencia <int> 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 4, 5, 5, 15, 75,…\n$ desfecho          <chr> \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O\", \"O…\n```\n\n\n:::\n:::\n1. A função `glimpse()` é usada para visualizar um resumo da estrutura do conjunto de dados. Ela mostra o número de observações e variáveis, além de listar as variáveis presentes e seus tipos.\n\n\n\n## Explore seus dados\n\n## Obtenha informações sobre cada variável no banco de dados\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  select(-c(registro)) %>% \n  skim()\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |           |\n|:------------------------|:----------|\n|Name                     |Piped data |\n|Number of rows           |48         |\n|Number of columns        |8          |\n|_______________________  |           |\n|Column type frequency:   |           |\n|character                |3          |\n|numeric                  |5          |\n|________________________ |           |\n|Group variables          |None       |\n\n\n**Variable type: character**\n\n|skim_variable | n_missing| complete_rate| min| max| empty| n_unique| whitespace|\n|:-------------|---------:|-------------:|---:|---:|-----:|--------:|----------:|\n|pre_natal     |         0|             1|   1|   1|     0|        2|          0|\n|sexo          |         0|             1|   1|   1|     0|        2|          0|\n|desfecho      |         0|             1|   1|   1|     0|        2|          0|\n\n\n**Variable type: numeric**\n\n|skim_variable     | n_missing| complete_rate|   mean|     sd|  p0| p25|   p50|    p75| p100|hist  |\n|:-----------------|---------:|-------------:|------:|------:|---:|---:|-----:|------:|----:|:-----|\n|n_consultas       |         0|             1|   2.00|   2.16|   0|   0|   1.5|   4.00|    8|▇▃▂▂▁ |\n|peso              |         0|             1| 782.92| 160.72| 100| 690| 800.0| 900.00|  980|▁▁▂▆▇ |\n|comprimento       |         0|             1|  32.92|   3.25|  26|  32|  33.0|  34.00|   49|▂▇▁▁▁ |\n|idade_gestacional |         0|             1|  29.42|   1.41|  28|  28|  29.0|  30.00|   33|▇▂▂▁▁ |\n|tempo_permanencia |         0|             1|  17.10|  28.69|   1|   1|   3.0|   8.25|  111|▇▁▁▁▁ |\n\n\n:::\n:::\n\n### Resumos estatísticos\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  select(-c(registro)) %>% \n  get_summary_stats(type = \"common\")                    # tipo do resumo estatístico a ser gerado\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 10\n  variable              n   min   max median    iqr  mean     sd     se     ci\n  <fct>             <dbl> <dbl> <dbl>  <dbl>  <dbl> <dbl>  <dbl>  <dbl>  <dbl>\n1 n_consultas          48     0     8    1.5   4      2     2.16  0.312  0.628\n2 peso                 48   100   980  800   210    783.  161.   23.2   46.7  \n3 comprimento          48    26    49   33     2     32.9   3.25  0.47   0.945\n4 idade_gestacional    48    28    33   29     2     29.4   1.41  0.204  0.41 \n5 tempo_permanencia    48     1   111    3     7.25  17.1  28.7   4.14   8.33 \n```\n\n\n:::\n:::\n\n\n\n### Quais são os desfechos presentes na base de dados?\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos  %>%  \n  distinct(desfecho) # <1>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  desfecho\n1        O\n2        V\n```\n\n\n:::\n:::\n1. A função `distinct()` é usada para retornar apenas os valores únicos de uma variável (ou conjunto de variáveis).\n\n\n### Distribuição de frequências da variável sexo\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>%               # fonte dos dados\n  tabyl(sexo) %>%              # tabula números absolutos e proporções por sexo\n  adorn_pct_formatting() %>%   # converte as proporções para porcentagens\n  adorn_totals(where = \"row\")  # adiciona uma linha chamada 'Total', com os totais\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sexo  n percent\n     F 29   60.4%\n     M 19   39.6%\n Total 48       -\n```\n\n\n:::\n:::\n\n### Distribuição de frequências da variável número de consultas\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% group_by(n_consultas) %>%\n  summarise(fa = n()) %>%\n  mutate(fr = fa / sum(fa),\n         Fr = fr * 100) %>% \n  adorn_totals(where = 'row') # <1>\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n n_consultas fa         fr         Fr\n           0 21 0.43750000  43.750000\n           1  3 0.06250000   6.250000\n           2  4 0.08333333   8.333333\n           3  6 0.12500000  12.500000\n           4  8 0.16666667  16.666667\n           5  3 0.06250000   6.250000\n           6  2 0.04166667   4.166667\n           8  1 0.02083333   2.083333\n       Total 48 1.00000000 100.000000\n```\n\n\n:::\n:::\n\n1. Podemos utilizar as funções adorn_*(), do pacote janitor, em outras tabelas criadas por outras funções.\n\n### Distribuição de frequências da variável peso\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  ds_freq_table(peso,7)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                         Variable: peso                                           \n|-----------------------------------------------------------------------------------------------|\n|                Bins                 | Frequency | Cum Frequency |   Percent    | Cum Percent  |\n|-----------------------------------------------------------------------------------------------|\n|       100        -      225.7       |     1     |       1       |     2.08     |     2.08     |\n|-----------------------------------------------------------------------------------------------|\n|      225.7       -      351.4       |     0     |       1       |      0       |     2.08     |\n|-----------------------------------------------------------------------------------------------|\n|      351.4       -      477.1       |     0     |       1       |      0       |     2.08     |\n|-----------------------------------------------------------------------------------------------|\n|      477.1       -      602.9       |     5     |       6       |    10.42     |     12.5     |\n|-----------------------------------------------------------------------------------------------|\n|      602.9       -      728.6       |     8     |      14       |    16.67     |    29.17     |\n|-----------------------------------------------------------------------------------------------|\n|      728.6       -      854.3       |    13     |      27       |    27.08     |    56.25     |\n|-----------------------------------------------------------------------------------------------|\n|      854.3       -       980        |    21     |      48       |    43.75     |     100      |\n|-----------------------------------------------------------------------------------------------|\n|                Total                |    48     |       -       |    100.00    |      -       |\n|-----------------------------------------------------------------------------------------------|\n```\n\n\n:::\n:::\n\nou, de forma alternativa,\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  mutate(classes = cut(peso ,breaks = 7)) %>% \n  group_by(classes) %>% \n  summarise(fa = n()) %>% \n  complete(classes, fill = list(fa = 0)) %>% \n  mutate(fr = fa / sum(fa),\n         Fr = fr * 100) %>% \n  adorn_totals(where = 'row')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    classes fa         fr         Fr\n (99.1,226]  1 0.02083333   2.083333\n  (226,351]  0 0.00000000   0.000000\n  (351,477]  0 0.00000000   0.000000\n  (477,603]  5 0.10416667  10.416667\n  (603,729]  8 0.16666667  16.666667\n  (729,854] 13 0.27083333  27.083333\n  (854,981] 21 0.43750000  43.750000\n      Total 48 1.00000000 100.000000\n```\n\n\n:::\n:::\n\n\n### Faixa de peso proporcional por desfecho\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>%\n  mutate(classes = cut(peso ,breaks = 7)) %>% \n  group_by(desfecho) %>% \n  count(classes) %>% \n  complete(classes, fill = list(n = 0)) %>%  \n  mutate(porcentagem = scales::percent(n / sum(n)))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 14 × 4\n# Groups:   desfecho [2]\n   desfecho classes        n porcentagem\n   <chr>    <fct>      <int> <chr>      \n 1 O        (99.1,226]     0 0.0%       \n 2 O        (226,351]      0 0.0%       \n 3 O        (351,477]      0 0.0%       \n 4 O        (477,603]      5 13.2%      \n 5 O        (603,729]      8 21.1%      \n 6 O        (729,854]     11 28.9%      \n 7 O        (854,981]     14 36.8%      \n 8 V        (99.1,226]     1 10%        \n 9 V        (226,351]      0 0%         \n10 V        (351,477]      0 0%         \n11 V        (477,603]      0 0%         \n12 V        (603,729]      0 0%         \n13 V        (729,854]      2 20%        \n14 V        (854,981]      7 70%        \n```\n\n\n:::\n:::\n\n### Visualizando graficamente\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>%\n  mutate(classes = cut(peso ,breaks = 7)) %>% \n  group_by(desfecho) %>% \n  count(classes) %>% \n  complete(classes, fill = list(n = 0)) %>%     # agrupe e tabule as contagens utilizando duas variáveis\n  ggplot()+                       # utilize a tabulação gerada no ggplot\n    geom_col(                     # crie um gráfico de barras\n      mapping = aes(   \n        x = desfecho,              # mapeie o grupo desfecho para o eixo x\n        fill = classes,           # mapeie o grupo classes para o fill\n        y = n))                   # mapeie as contagens (coluna 'n') para o eixo y\n```\n\n::: {.cell-output-display}\n![](recem_nascidos_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n### Calculando os percentis da variavel peso por desfecho\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  group_by(desfecho) %>% \n  rstatix::get_summary_stats(peso, type = \"quantile\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 8\n  desfecho variable     n  `0%` `25%` `50%` `75%` `100%`\n  <chr>    <fct>    <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl>\n1 O        peso        38   550  652.   785  900     980\n2 V        peso        10   100  830    865  928.    970\n```\n\n\n:::\n:::\n\n### Resumo dos dados agregados\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  select(-c(registro)) %>% \n  group_by(desfecho) %>% \n  summarise(across(\n    .cols = where(is.numeric),  # all numeric columns in the data frame\n    .fns = mean,\n    na.rm=T))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 6\n  desfecho n_consultas  peso comprimento idade_gestacional tempo_permanencia\n  <chr>          <dbl> <dbl>       <dbl>             <dbl>             <dbl>\n1 O               1.61  776.        32.7              29.0              4.18\n2 V               3.5   808         33.9              30.9             66.2 \n```\n\n\n:::\n:::\n\n### Tabela de contingência das variáveis pre_natal e desfecho\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  tabyl(pre_natal, desfecho)%>% \n  adorn_totals(where = 'both')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n pre_natal  O  V Total\n         N 19  2    21\n         S 19  8    27\n     Total 38 10    48\n```\n\n\n:::\n:::\n\n### Visualizando graficamente\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  group_by(pre_natal, desfecho) %>% \n  summarise(n = n()) %>% \n  ggplot(aes(x = desfecho, y = n, fill = pre_natal)) +\n  geom_col(position = \"dodge\")\n```\n\n::: {.cell-output-display}\n![](recem_nascidos_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n### Fazer consultas pré natal está associado ao desfecho?\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  tabyl(pre_natal, desfecho) %>% \n  chisq.test()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tPearson's Chi-squared test with Yates' continuity correction\n\ndata:  .\nX-squared = 1.8045, df = 1, p-value = 0.1792\n```\n\n\n:::\n:::\n\n### Relação entre peso e comprimento dos recém-nascidos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  ggplot(aes(x = comprimento,\n             y = peso)) +\n  geom_point()+\n  labs(title=\"Relação entre peso e comprimento dos recém-nascidos\",\n       x = \"Comprimento (cm)\",\n       y = \"Peso (g)\")\n```\n\n::: {.cell-output-display}\n![](recem_nascidos_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n### Distribuição de pesos segundo sexo dos recém-nascidos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndados_brutos %>% \n  ggplot(aes(x = sexo,\n             y = peso)) +\n  geom_boxplot()+\n  labs(title=\"Distribuição de pesos segundo sexo dos recém-nascidos\",\n       x = \"Sexo\",\n       y = \"Peso (g)\")\n```\n\n::: {.cell-output-display}\n![](recem_nascidos_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::",
    "supporting": [
      "recem_nascidos_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}